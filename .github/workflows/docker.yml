name: Docker
on:
  pull_request:
  push:
    branches:
      - master
permissions:
  contents: read
  id-token: write
jobs:
  build:
    name: Docker build (and optional push)
    runs-on: ubuntu-22.04
    env:
      RUBYGEMS_VERSION: 3.4.9
      RUBY_VERSION: 3.2.1
    services:
      db:
        image: postgres:11.13
        ports:
          - "5432:5432"
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
      cache:
        image: memcached:1.4.24
        ports:
          - "11211:11211"
      search:
        image: opensearchproject/opensearch:1.3.7
        ports:
          - "9200:9200"
        env:
          http.host: 0.0.0.0
          transport.host: 127.0.0.1
          plugins.security.disabled: "true"
      toxiproxy:
        image: shopify/toxiproxy:2.1.4
        ports:
          - "8474:8474"
          - "22221:22221"
    steps:
      - uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@4b4e9c3e2d4531116a6f8ba8e71fc6e2cb6e6c8c # master
      - name: Cache Docker layers
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-rubygems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-rubygems-org
      - name: Configure AWS credentials from Production account
        uses: aws-actions/configure-aws-credentials@v2
        if: github.secret_source != 'None'
        with:
          role-to-assume: arn:aws:iam::048268392960:role/rubygems-ecr-pusher
          aws-region: us-west-2
      - name: Login to Amazon ECR
        if: github.secret_source != 'None'
        uses: aws-actions/amazon-ecr-login@v1
      - name: build, test and optionally push docker image
        run: ./script/build_docker.sh
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
